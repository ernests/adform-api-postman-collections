{
  "variables": [],
  "info": {
    "name": "Advertiser",
    "_postman_id": "82ddc220-903d-0e1a-73de-60070228aec5",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "b6397224-69bf-2a38-85d0-a52e062d9f38",
      "name": "Alerts",
      "description": "",
      "item": [
        {
          "_postman_id": "431e78d3-1b3f-37bc-8447-3d7b3b19a183",
          "name": "Alerts",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/alerts?agencyId={{AgencyId}}",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns list of own and inherited alerts for specified client/campaign/agency.\n\nYou can filter alerts by parsing AgencyId, AdvertiserID or CampaignId in your request URL. One and only one item can be specified. E.g. both AdvertiserId and CampaignId are not allowed.\n\nEXAMPLE: \nv1/alerts?agencyId={{AgencyId}} or v1/alerts?advertiserId={{AdvertiserId}} or\nv1/alerts?campaignId={{CampaignId}}\n\n\nYou can retrieve AgencyId and set it as a Global variable using \"Get Advertiser\" method.\n\nYou can retrieve AdvertiserId using \"Get Advertiser\" method.\n\nYou can retrieve CampaignId using \"Get Campaigns\" method."
          },
          "response": []
        },
        {
          "_postman_id": "471891c1-fc56-f3f2-8730-37454e57ed5a",
          "name": "Alert",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AlertId', jsonData.id);\r",
                  "    tests[\"AlertId was set as a global variable\"] =\r",
                  "      globals.AlertId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/alerts",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"levelItemId\": {{levelItemId}},\r\n  \"level\": 2,\r\n  \"type\": 1,\r\n  \"settings\": 1200,\r\n  \"notificationSettings\": {\r\n    \"campaignManager\": true,\r\n    \"campaignCoManager\": false,\r\n    \"sendSMS\": false,\r\n    \"sendEmail\": true,\r\n    \"additionalContacts\": [\r\n      {\r\n        \"email\": \"advertisertestexample@example.com\",\r\n        \"phone\": null\r\n      }\r\n    ]\r\n  }\r\n}"
            },
            "description": "This service is able to send alerts to your specified e-mail address or a short message directly to your phone number while the alerts themselves can monitor end dates of campaigns, expiration of line items, budget, discrepancies in impressions and clicks etc.\r\n\r\nThis service creates a new alert. There are 3 different alert levels - campaign, advertiser and agency. \r\n\r\nNOTE: You need to specify campaign level on your request URL.\r\n\r\nEXAMPLE: \"v1/buyer/alerts\"\r\n\r\nYou can retrieve AdvertiserId using \"Get Advertiser\" method or campaign dictionaries.\r\n\r\n\"level\" correspond to numbers: \r\n1 - Agency\r\n2 - Advertiser/Client\r\n3 - Campaign\r\n\r\n\"levelItemId\" depends on \"level\" set. \r\nE.g. if \"level\" = 1 then you have to insert AgencyId\r\n\r\nSettings model varies by alert type.\r\n\r\nPossible alert types:\r\n1 - CampaignEndDate, \r\n2 - LineItemEndDate, \r\n5 - RtbLineItemBudget, \r\n7 - ClicksWithoutImpressions, \r\n8 - ImpressionsWithoutClicks \r\n'settings' value is a number greater or equal to 0.\r\n\r\nFor alert types: \r\n3 - CampaignBudget, \r\n4 - LineItemBudget\r\n'settings' value is a number between 0 and 100.\r\n\r\nFor alert types:\r\n6 - PriceHigherThanGoal \r\n'settings' value is an object: \r\n\"settings\": {\r\n\"value\": 1,\r\n\"timeType\": 1,\r\n\"time\": 1\r\n}\r\n\r\nFor alert types: \r\n9 - KpiVisitsNotMeetingGoal \r\n'settings' value is an object. \r\n\"settings\": {\r\n\"trackingFilter\": 1, \r\n\"kpiMetric\": 1,\r\n\"value\": 1,\r\n\"timeType\": 1,\r\n\"time\": 1\r\n}\r\n10 - KpiWinRateNotMeetingGoal \r\n'settings' value is an object for during: \r\n\"settings\": {\r\n\"kpiMetric\": 1,\r\n\"value\": 1,\r\n\"timeType\": 1,\r\n\"time\" : 1,\r\n} \r\nor for compared to: \r\n\"settings\": {\r\n\"trackingFilter\": 1, // only for KpiVisitsNotMeetingGoal \r\n\"kpiMetric\": 1,\r\n\"value\": 1,\r\n\"comparedTo\": 1\r\n}\r\n\r\nAvailable values for TimeType: \r\n1 - Days\r\n2 - Hours\r\n\r\nAvailable values for ComparedTo: \r\n1 - Day\r\n2 - Week\r\n3 - Month\r\n\r\nAvailable values for KpiMetric - visits: \r\n1 - Higher\r\n2 - Lower\r\n3 - Equal\r\n4 - Increased\r\n5 - Decreased\r\n6 - TrackingFilter\r\n\r\nAvailable values for KpiMetric - win rate: \r\n1 - Higher\r\n2 - Lower\r\n3 - Equal\r\n4 - Increased\r\n5 - Decreased\r\n\r\n\r\nTips on request body:\r\n- Type is always a number\r\n- Settings depend on type\r\n- CampaignManager/campaignCoManager value \"true\" enables CampaignManager or CampaignCoManager to receive alers."
          },
          "response": []
        },
        {
          "_postman_id": "bd8c07cf-3513-8d39-60ed-d3739e4eb9d1",
          "name": "Alert",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/alerts/{{AlertId}}",
            "method": "PATCH",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"settings\": 1200,\r\n  \"notificationSettings\": {\r\n    \"campaignManager\": true,\r\n    \"campaignCoManager\": false,\r\n    \"sendSMS\": false,\r\n    \"sendEmail\": true,\r\n    \"additionalContacts\": [\r\n      {\r\n        \"email\": \"advertisertestexample@example.com\",\r\n        \"phone\": null\r\n      }\r\n    ]\r\n  }\r\n}"
            },
            "description": "This service updates alert details or its status (using property \"isEnabled\").\n\nNOTE: You need to define AlertId on request URL.\n\nEXAMPLE: \"v1/buyer/alerts/{{AlertId}}\"\n{{AlertId}} is taken from global variables if set, if not get it from \"GET Alerts\" method and insert it here without {{}}.\n\nBody has to be the same as in \"POST Alert\" method. Refer to this method's documentation.\n\nSettings model varies by alert type.\nPossible alert types: 1 - CampaignEndDate, 2 - LineItemEndDate, 5 - RtbLineItemBudget, 7 - ClicksWithoutImpressions, 8 - ImpressionsWithoutClicks 'settings' value is a number greater or equal to 0.\nFor alert types: 3 - CampaignBudget, 4 - LineItemBudget 'settings' value is a number between 0 and 100.\nFor alert type 6 - PriceHigherThanGoal 'settings' value is an object: \"settings\": { \"value\": 1, \"timeType\": 1, \"time\": 1 }\nFor alert types: 9 - KpiVisitsNotMeetingGoal 'settings' value is an object. \"settings\": { \"trackingFilter\": 1, \"kpiMetric\": 1, \"value\": 1, \"timeType\": 1, \"time\": 1 } 10 - KpiWinRateNotMeetingGoal 'settings' value is an object for during: \"settings\": { \"kpiMetric\": 1, \"value\": 1, \"timeType\": 1, \"time\" : 1, } or for compared to: \"settings\": { \"trackingFilter\": 1, // only for KpiVisitsNotMeetingGoal \"kpiMetric\": 1, \"value\": 1, \"comparedTo\": 1 }\nAvailable values for TimeType: 1 - Days 2 - Hours\nAvailable values for ComparedTo: 1 - Day 2 - Week 3 - Month\nAvailable values for KpiMetric - visits: 1 - Higher 2 - Lower 3 - Equal 4 - Increased 5 - Decreased 6 - TrackingFilter\nAvailable values for KpiMetric - win rate: 1 - Higher 2 - Lower 3 - Equal 4 - Increased 5 - Decreased\n\nTo update Notification Settings, pass NotificationSettings object. To update status, pass \"isEnabled\": true. Both changes cannot be made in one call and need to be made separately."
          },
          "response": []
        },
        {
          "_postman_id": "dfef8f01-af1d-bdae-247c-d1af19a97304",
          "name": "Alert",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/alerts/{{AlertId}}",
            "method": "DELETE",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method deletes a specified alert.\n\nNOTE: You need to define AlertId on request URL.\n\nEXAMPLE: \"v1/buyer/alerts/{{AlertId}}\"\n{{AlertId}} is taken from global variables if set, if not get it from \"GET Alerts\" method and insert it here without {{}}.\n"
          },
          "response": []
        },
        {
          "_postman_id": "5b953ddf-c17e-f72c-2e02-2df43e95ceb1",
          "name": "Enable/Disable alert",
          "request": {
            "url": "https://api.adform.com/v1/alerts/00000/isenabled?advertiserId=111111",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method allows you to enable or disable alert inherited from other level.\n\nEXAMPLES:\n\nExamples:\nv1/alerts/111111/isenabled?advertiserId=00000 (where 11111 is alert id and 00000 advertiser id)"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "1d15dfd3-72c1-e360-347d-9d49fdf10dba",
      "name": "Attribute Settings",
      "description": "",
      "item": [
        {
          "_postman_id": "842aa99f-1af1-1697-1e94-8414292ae3b1",
          "name": "Default Banner Attributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/{{AdvertiserId}}",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of default banner attributes for a predefined advertiser.\n\nAdvertiserId parameter is required in your request url. \n\nEXAMPLE (00000 stands for advertiser id): //api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/00000\n\nYou can retrieve AdvertiserId using \"GET Advertisers\" method.\n\nFYI: You can use \"Params\" button for easier parameter management."
          },
          "response": []
        },
        {
          "_postman_id": "7c5af4ad-156a-f298-13bb-22186e58fa3e",
          "name": "Create Default Banner Attributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/{{AdvertiserId}}",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\r\n  {\r\n    \"Title\": \"string\",\r\n    \"AttributeValues\": [\r\n      \"string\"\r\n    ]\r\n  }\r\n]"
            },
            "description": "This method allows to create attribute groups, which later can be assigned to each banner in order to batch them and sort the reports data out according to the attribute values.\n\nAdvertiserId parameter is required in your request url. \n\nEXAMPLE (00000 stands for advertiser id): //api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/00000\n\nYou can retrieve AdvertiserId using \"GET Advertisers\" method.\n\n\"Title\" object stands for the title of default banners attributes.\n\"AttributeValues\" object should contain attribute values in upper quotation marks, separated by commas. \n\nFYI: You can use \"Params\" button for easier parameter management."
          },
          "response": []
        },
        {
          "_postman_id": "be048e97-afae-ea67-fcd8-923891ac0827",
          "name": "Update Default Banner Attributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/{{AdvertiserId}}",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\r\n  {\r\n    \"Title\": \"string\",\r\n    \"AttributeValues\": [\r\n      \"string\"\r\n    ]\r\n  }\r\n]"
            },
            "description": "This method allows to update attribute groups, which later can be assigned to each banner in order to batch them and sort the reports data out according to the attribute values.\n\nAdvertiserId parameter is required in your request url. \n\nEXAMPLE (00000 stands for advertiser id): //api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/00000\n\nYou can retrieve AdvertiserId using \"GET Advertisers\" method.\n\n\"Title\" object stands for the title of default banners attributes.\n\"AttributeValues\" object should contain attribute values in upper quotation marks, separated by commas. \n\nFYI: You can use \"Params\" button for easier parameter management."
          },
          "response": []
        },
        {
          "_postman_id": "c75ec574-c1c3-b943-476e-94196b1a27cd",
          "name": "Delete Default BannerAttributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/{{AdvertiserId}}",
            "method": "DELETE",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method deletes all the updates that has been made on default banner attributes for a predefined advertiser. \n\nAdvertiserId parameter is required in your request url. \n\nEXAMPLE (00000 stands for advertiser id): //api.adform.com/api/v1/Advertisers/DefaultBannerAttributes/00000\n\nYou can retrieve AdvertiserId using \"GET Advertisers\" method.\n\nFYI: You can use \"Params\" button for easier parameter management."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c5096788-45b5-5aff-a457-a05ebace0c30",
      "name": "Labels",
      "description": "",
      "item": [
        {
          "_postman_id": "aec899e9-8dc8-852e-5e10-58a505ca739f",
          "name": "Labels",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Label/AdvertiserLabels?AdvertiserId={{AdvertiserId}}",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of all label groups, filtered by specified AdvertiserId. \n\nAdvertiserId parameter is required in your request url. \n\nEXAMPLE: \napi.adform.com/Services/Label/AdvertiserLabels?AdvertiserId=00000\n\nYou can retrieve AdvertiserId using \"GET Advertisers\" method.\n\nFYI: You can use \"Params\" button for easier parameter management."
          },
          "response": []
        },
        {
          "_postman_id": "26b25893-a016-5dc8-6cf2-b9b79819c601",
          "name": "Add Label",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('LabelId', jsonData.Label.Id);\r",
                  "    tests[\"LabelId was set as a global variable\"] =\r",
                  "      globals.AlertId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Label/AdvertiserLabels",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"GroupId\": 1842,\r\n  \"LabelName\": \"TestLabel\"\r\n}"
            },
            "description": "This method allows you to create labels at advertiser level according to your specific needs. These labels can then be used across multiple campaigns and clients.\n\nLabelGroupId is required in the request body that you are parsing.\n\nEXAMPLE: \"GroupId\": 00000\n\nYou can retrieve LabelGroupId using \"GET Labels\" method."
          },
          "response": []
        },
        {
          "_postman_id": "12c766fa-9f0c-8d63-a90e-0d82a998dc63",
          "name": "Remove Label",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Label/AdvertiserLabels?id=14656",
            "method": "DELETE",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method removes a specified label.\n\nLabelId parameter is required in your request url. \n\nEXAMPLE: ?id=00000\n\nYou can retrieve LabelId using \"GET Labels\" method."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4554ee3b-83f5-d8d3-cb80-a82dd1d8944b",
      "name": "Management",
      "description": "",
      "item": [
        {
          "_postman_id": "7205785c-84c5-4fce-66c3-df76afff5a71",
          "name": "Advertisers OLD",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Advertiser/Advertisers",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "To use Advertiser service you need to have advertisers created.\n\nIn case it's your first time using our services, please contact our Adform Traffic: traffic@adform.com or Adform Help:help@adform.com teams for assistance.\n\nThis method returns a list of all advertisers which are under the same client as you have logged in.\n\nNOTE: You can filter advertisers by parsing \"Names\" parameter in your request URL. \"Names\" parameter is of string array type. \n\nEXAMPLE: ?Names=AdvertiserName1,AdvertiserName2...."
          },
          "response": []
        },
        {
          "_postman_id": "096ae044-75ff-8801-1667-cb83464485d1",
          "name": "Advertisers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers"
          },
          "response": []
        },
        {
          "_postman_id": "cdbd9ea9-41a1-0dad-be38-2cbe885411ca",
          "name": "Create Advertisers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Pepsi\",\r\n  \"industryVertical\": \"Arts & Entertainment\",\r\n  \"timeZone\": \"Europe/Berlin\",\r\n  \"managerId\": 5,\r\n  \"coManagerId\": 6,\r\n  \"lineItemView\": \"RTB\",\r\n  \"netAmountCalcMethod\": \"NetAmount1\",\r\n  \"hourlyBillingRate\": 10.7,\r\n  \"vatPercent\": 22.3,\r\n  \"cookieMatchingOnImpressionsEnabled\": true,\r\n  \"cookieMatchingOnTrackingPointsEnabled\": true,\r\n  \"adsquareClientId\": \"1234567890abcdef1234567\",\r\n  \"vatNumber\": \"123456789\"\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/post_v1_buyer_advertisers"
          },
          "response": []
        },
        {
          "_postman_id": "36217c28-cb6d-6ecb-5062-401056dd6bb8",
          "name": "Check advertiser status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/pending/{id}",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Pepsi\",\r\n  \"industryVertical\": \"Arts & Entertainment\",\r\n  \"timeZone\": \"Europe/Berlin\",\r\n  \"managerId\": 5,\r\n  \"coManagerId\": 6,\r\n  \"lineItemView\": \"RTB\",\r\n  \"netAmountCalcMethod\": \"NetAmount1\",\r\n  \"hourlyBillingRate\": 10.7,\r\n  \"vatPercent\": 22.3,\r\n  \"cookieMatchingOnImpressionsEnabled\": true,\r\n  \"cookieMatchingOnTrackingPointsEnabled\": true,\r\n  \"adsquareClientId\": \"1234567890abcdef1234567\",\r\n  \"vatNumber\": \"123456789\"\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_pending_id"
          },
          "response": []
        },
        {
          "_postman_id": "5ad44b73-60f8-e9f3-51cf-bd1d5ab405be",
          "name": "Specific Advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Pepsi\",\r\n  \"industryVertical\": \"Arts & Entertainment\",\r\n  \"timeZone\": \"Europe/Berlin\",\r\n  \"managerId\": 5,\r\n  \"coManagerId\": 6,\r\n  \"lineItemView\": \"RTB\",\r\n  \"netAmountCalcMethod\": \"NetAmount1\",\r\n  \"hourlyBillingRate\": 10.7,\r\n  \"vatPercent\": 22.3,\r\n  \"cookieMatchingOnImpressionsEnabled\": true,\r\n  \"cookieMatchingOnTrackingPointsEnabled\": true,\r\n  \"adsquareClientId\": \"1234567890abcdef1234567\",\r\n  \"vatNumber\": \"123456789\"\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id"
          },
          "response": []
        },
        {
          "_postman_id": "e13fecdc-436d-c643-1d69-ea78a14a5018",
          "name": "Update Advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"NotCocaCola\",\r\n  \"industryVertical\": \"Arts & Entertainment\",\r\n  \"timeZone\": \"Europe/Berlin\",\r\n  \"managerId\": 5,\r\n  \"coManagerId\": 6,\r\n  \"lineItemView\": \"RTB\",\r\n  \"netAmountCalcMethod\": \"NetAmount1\",\r\n  \"hourlyBillingRate\": 5.6,\r\n  \"vatPercent\": 43.7,\r\n  \"cookieMatchingOnImpressionsEnabled\": false,\r\n  \"cookieMatchingOnTrackingPointsEnabled\": true,\r\n  \"adsquareClientId\": \"1234567890abcdef1234567\",\r\n  \"vatNumber\": \"123456789\"\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id"
          },
          "response": []
        },
        {
          "_postman_id": "ef759dec-28f6-4831-b2f0-1e438c2ba735",
          "name": "Advertiser activity status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/status",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"NotCocaCola\",\r\n  \"industryVertical\": \"Arts & Entertainment\",\r\n  \"timeZone\": \"Europe/Berlin\",\r\n  \"managerId\": 5,\r\n  \"coManagerId\": 6,\r\n  \"lineItemView\": \"RTB\",\r\n  \"netAmountCalcMethod\": \"NetAmount1\",\r\n  \"hourlyBillingRate\": 5.6,\r\n  \"vatPercent\": 43.7,\r\n  \"cookieMatchingOnImpressionsEnabled\": false,\r\n  \"cookieMatchingOnTrackingPointsEnabled\": true,\r\n  \"adsquareClientId\": \"1234567890abcdef1234567\",\r\n  \"vatNumber\": \"123456789\"\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_status"
          },
          "response": []
        },
        {
          "_postman_id": "535a1e7f-80e3-8c76-a21f-da665bde5c87",
          "name": "Change Advertiser activity status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/status",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"Inactive\""
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_status"
          },
          "response": []
        },
        {
          "_postman_id": "1e140442-1556-9d3a-5a6a-fee7c5f00e1f",
          "name": "Advertiser Brand safety settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/brandSafety",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"Inactive\""
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_brandSafety"
          },
          "response": []
        },
        {
          "_postman_id": "03d8b76a-560c-d769-cde0-3a329b5f8d87",
          "name": "Update Advertiser Brand safety settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/brandSafety",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"enabled\": true,\r\n  \"providerId\": 1,\r\n  \"blockedCategories\": [10,\r\n 20,\r\n 30],\r\n  \"blockUncategorized\": false\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_brandSafety"
          },
          "response": []
        },
        {
          "_postman_id": "e4493335-c25a-0ad3-6766-e2aaf1485523",
          "name": "Advertiser campaign labels",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/campaignLabels",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"enabled\": true,\r\n  \"providerId\": 1,\r\n  \"blockedCategories\": [10,\r\n 20,\r\n 30],\r\n  \"blockUncategorized\": false\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_campaignLabels"
          },
          "response": []
        },
        {
          "_postman_id": "4c09b5b5-94b4-7a5c-afeb-b5630a68dd4e",
          "name": "Update Advertiser campaign labels",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/campaignLabels",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"labelGroups\": [{\r\n\t\t\"id\": 1,\r\n\t\t\"name\": \"Pepsi Labels\",\r\n\t\t\"labels\": [{\r\n\t\t\t\"id\": 12,\r\n\t\t\t\"name\": \"Christmas Campaign\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"Summer Campaign\"\r\n\t\t}]\r\n\t}, {\r\n\t\t\"name\": \"Microsoft Labels\",\r\n\t\t\"labels\": []\r\n\t}]\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_campaignLabels"
          },
          "response": []
        },
        {
          "_postman_id": "48969cce-5b3a-fb8c-6bcc-368dd8c856aa",
          "name": "Advertiser RTB Domain settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"labelGroups\": [{\r\n\t\t\"id\": 1,\r\n\t\t\"name\": \"Pepsi Labels\",\r\n\t\t\"labels\": [{\r\n\t\t\t\"id\": 12,\r\n\t\t\t\"name\": \"Christmas Campaign\"\r\n\t\t}, {\r\n\t\t\t\"name\": \"Summer Campaign\"\r\n\t\t}]\r\n\t}, {\r\n\t\t\"name\": \"Microsoft Labels\",\r\n\t\t\"labels\": []\r\n\t}]\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_rtbDomains"
          },
          "response": []
        },
        {
          "_postman_id": "8c600abd-aae8-7f36-2b2a-322e5c8cd785",
          "name": "Update Advertiser RTB Domain settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"includedDomainsSource\": \"CustomList\",\r\n  \"excludedDomainsSource\": \"Template\",\r\n  \"excludedDomainsTemplateId\": 2,\r\n  \"excludeUnknownDomains\": true\r\n}"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_rtbDomains"
          },
          "response": []
        },
        {
          "_postman_id": "261415df-083c-2eef-87d4-e5b3aca1bab0",
          "name": "Advertiser RTB custom included Domains",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains/includedDomains",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[  \"example.com\",\r\n  \"another.domain.org\"]"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_rtbDomains_includedDomains"
          },
          "response": []
        },
        {
          "_postman_id": "f19d9e73-7e43-444b-a559-b39930aed5c3",
          "name": "Update Advertiser RTB custom included Domains",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains/includedDomains",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[  \"example.com\",\r\n  \"another.domain.org\"]"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_rtbDomains_includedDomains"
          },
          "response": []
        },
        {
          "_postman_id": "4b88207e-3841-8eb5-de9e-57f70c3325a1",
          "name": "Advertiser RTB custom excluded Domains",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains/excludedDomains",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[  \"example.com\",\r\n  \"another.domain.org\"]"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/get_v1_buyer_advertisers_id_rtbDomains_excludedDomains"
          },
          "response": []
        },
        {
          "_postman_id": "84eded0f-46a7-a53a-1e04-95a14aa8dc2a",
          "name": "Update Advertiser RTB custom excluded Domains",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;\r",
                  "  \r",
                  "if(responseCode.code === 200) {\r",
                  "  var jsonData = JSON.parse(responseBody);\r",
                  "  postman.setGlobalVariable('AgencyId', jsonData.Advertisers[0].AgencyId);\r",
                  "    tests[\"AgencyId was set as a global variable\"] =\r",
                  "      globals.AgencyId !== undefined;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/advertisers/{id}/rtbDomains/excludedDomains",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[  \"example.com\",\r\n  \"another.domain.org\"]"
            },
            "description": "https://api.adform.com/v1/help/buyer/advertisers#!/Advertisers/put_v1_buyer_advertisers_id_rtbDomains_excludedDomains"
          },
          "response": []
        }
      ]
    }
  ]
}