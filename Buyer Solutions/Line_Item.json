{
  "variables": [],
  "info": {
    "name": "Line Item",
    "_postman_id": "e5301d83-9643-d6f1-ea51-fea31d68826a",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "2574b73c-05bd-3006-9312-f5e29fd76dd4",
      "name": "Direct",
      "description": "",
      "item": [
        {
          "_postman_id": "e69ff470-5f35-0524-b04d-2fa47512d544",
          "name": "Placement Labels",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Label/PlacementLabels?placementIds=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of selected placement/line item labels.\n\nYou need to parse PlacementId on your request URL.\n\nEXAMPLE: /Services/Label/PlacementLabels?placementIds=00000\n\nYou can retrieve PlacementId using \"GET Placements\" method."
          },
          "response": []
        },
        {
          "_postman_id": "af6d3d6e-476a-9a1a-a670-94bc9cc09f50",
          "name": "Placement Labels",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Label/PlacementLabels",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PlacementId\" : 00000,\r\n  \"PlacementLabels\": [\r\n    {\r\n      \"Id\": 111\r\n    }\r\n  ]\r\n}"
            },
            "description": "This method sets labels for selected placements.\n\nYou need to parse PlacementIds in your request body.\n\nYou can retrieve PlacementId using \"GET Placements\" method."
          },
          "response": []
        },
        {
          "_postman_id": "153e59c2-fd76-3924-3281-837b04a4bda6",
          "name": "Placements ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/Placements?CampaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of all placements that belong to a specified campaign's active mediaplan.\n\nYou have to parse CampaignId parameter on your request URL.\n\nEXAMPLE: /Placement/Placements?CampaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\"."
          },
          "response": []
        },
        {
          "_postman_id": "7712ce33-1328-7d49-8c0d-ce665969403a",
          "name": "Add Placement",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/Placements",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Placement\": {\r\n    \"Name\": \"Placement22\",\r\n    \"MediaPlanId\": 111333,\r\n    \"MediaId\": 21121,\r\n    \"BuyType\": \"cpc\",\r\n    \"Volume\": 1000,\r\n    \"GrossAmount\": 11,\r\n    \"NetAmount\": 12\r\n  },\r\n  \"CampaignId\": 00000\r\n}"
            },
            "description": "This method creates a new placement and adds it to an active media plan in your specified campaign.\n\nYou have to parse CampaignId in your request body.\n\nYou can retrieve CampaignId using \"GET Campaigns\".\n\nYou can retrieve MediaId using \"GET Medias\" from Orders.\n\nRead more: \nhttp://api.adform.com/help/references/buyer-solutions/line-item/direct/placements/add-placement"
          },
          "response": []
        },
        {
          "_postman_id": "0d51b7e0-7c97-fb00-2dd9-af9a3d2faa93",
          "name": "Update Placement",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/Placements",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Placement\": {\n    \"Id\": 112233,\n    \"Name\": \"Placement_updated\",\n    \"MediaPlanId\": 584124,\n    \"MediaId\": 1252626,\n    \"BuyType\": \"Cpc\",\n    \"Volume\": 1000,\n    \"GrossAmount\": 11,\n    \"NetAmount\": 12\n  }\n}"
            },
            "description": "This method updates an existing placement.\n\nYou have to parse PlacementId in your request body.\n\nYou can retrieve CampaignId using \"GET Placements\"."
          },
          "response": []
        },
        {
          "_postman_id": "a0687095-0d70-5e78-ee9a-e8d77984b43a",
          "name": "Placement Schedule",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/PlacementSchedules?PlacementIds=111111",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns placement schedule information.\n\nYou have to parse PlacementId in your request URL.\n\nEXAMPLE: /Placement/PlacementSchedules?PlacementIds=11111\n\nYou can retrieve CampaignId using \"GET Placements\"."
          },
          "response": []
        },
        {
          "_postman_id": "e1dd03e9-2105-ccb5-dc1d-bd2486117c4a",
          "name": "Set Placement Schedule",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/PlacementSchedules",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"PlacementSchedule\": {\n    \"PlacementId\": 1111111,\n    \"Intervals\": [\n      {\n        \"From\": \"2016-06-21T00:00:00\",\n        \"To\": \"2016-06-21T00:00:00\"\n      },\n      {\n        \"From\": \"2016-07-23T00:00:00\",\n        \"To\": \"2016-07-23T00:00:00\"\n      }\n    ]\n  }\n}"
            },
            "description": "This method updates Placement Schedule.\n\nYou need to parse PlacementId in your request URL.\n\nYou can retrieve PlacementId using method \"GET Placements\""
          },
          "response": []
        },
        {
          "_postman_id": "f570f1c9-5646-e34c-9e52-5bb29030029d",
          "name": "Placement Comments",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/PlacementComments?PlacementIds=11111",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns placement comment information.\n\nYou need to parse PlacementId in your request URL.\n\nEXAMPLE: /Placement/PlacementComments?PlacementIds=11111\n\nYou can retrieve PlacementId using \"GET Placements\" method."
          },
          "response": []
        },
        {
          "_postman_id": "88eafcbb-c102-7568-0f63-decfb55e031f",
          "name": "Placement Comments",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/Placement/PlacementComments",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PlacementComments\": {\r\n    \"PlacementId\": 11111,\r\n    \"Url\": \"www.adform.com\",\r\n    \"Comment\": \"Some comment\",\r\n    \"AdGapId\": null,\r\n    \"TagComment1\": \"Some comment 1\",\r\n    \"TagComment2\": \"Some comment 2\",\r\n    \"TagComment3\": \"Some comment 3\",\r\n    \"TagComment4\": \"Some comment 4\"\r\n  }\r\n}"
            },
            "description": "This method returns placement comment information.\n\nYou need to parse PlacementId in your request body.\n\nYou can retrieve PlacementId using \"GET Placements\" method."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "46163ae0-4e80-a690-4049-1bdb18f1de1a",
      "name": "RTB",
      "description": "",
      "item": [
        {
          "_postman_id": "3ec803ff-64aa-dc8d-01a6-48a03ee58aae",
          "name": "Line items",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/rtb/lineitems?campaignIds=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns line items available in user's agency scope. In order to access line items, user should have granted access to agency campaigns.\n\nAt least one campaign, order, line item or placement identifier should be specified.\n\nFiltering parameter names:\n1. campaignIds (comma separated list of campaign identifiers)\n2. orderIds (comma separated list of order identifiers)\n3. lineitemIds (comma separated list of line item identifiers/0\n4. placementIds (comma separated list of placement identifiers)\n5. types (comma separated list of line item types. Available values: Display, Mobile, Video)\n6. fields (comma separated list of fields to return in response. Available values: \nId, PlacementId, OrderId, CampaignId, AgencyId, Name, Type, Budget)\n7. paused (filter by paused attribute)\n8. deleted (fiter by deleted attribute)\n9. search (search by line item name)\n10. sort (comma separated sort settings, e.g. sort=id+asc,name+desc. Available fields for sorting: id, name)\n11. offset (Starting index of items to return. Default value = 0)\n11. limit (Default value = 100)\n\nExample: /v1/buyer/rtb/lineitems?campaignIds=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method."
          },
          "response": []
        },
        {
          "_postman_id": "5722c149-444e-350a-d06a-c2ce1480affb",
          "name": "Specific Line Item",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "    request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "    responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities?campaignId=00000&ActivityId=11111",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a specific RTB line item.\n\nYou need to parse CampaignId and ActivityId on your request URL.\n\nEXAMPLE: /Activities?campaignId=00000&ActivityId=11111"
          },
          "response": []
        },
        {
          "_postman_id": "43c338d5-2c2f-a101-7139-0488958a08a5",
          "name": "Create Line item",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"CampaignId\": 00000,\r\n  \"Name\": \"RTB Activity Name\",\r\n  \"SchedulingType\": 1,\r\n  \"SchedulerStartDate\": \"2016-05-04T23:00:00Z\",\r\n  \"SchedulerEndDate\": \"2016-10-31T00:00:00Z\", \r\n  \"PeriodStartDate\": \"2016-05-05T14:23:00Z\",\r\n  \"PeriodEndDate\": \"2016-05-04T23:00:00Z\",\r\n  \"FullPeriodStartDate\": \"2016-05-04T23:00:00Z\",\r\n  \"FullPeriodEndDate\": \"2016-10-31T00:00:00Z\",\r\n  \"BuyingType\": 2,\r\n  \"Inventories\": [\r\n    {\r\n      \"InventorySourceId\": 780,\r\n      \"SourceId\": 780,\r\n      \"SourceType\": 1,\r\n      \"State\": 2\r\n    }\r\n  ]\r\n}"
            },
            "description": "This method creates a new RTB Line Item.\n\nYou need to parse CampaignId in your request body and specify at least one inventory.\n\nInventory specification includes InventorySourceId and SourceId.\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can retrieve information about inventories using \"GET Inventory Sources\" method.\n\nMore info about line item creation: \nhttp://api.adform.com/help/references/buyer-solutions/line-item/rtb/management/create-line-item"
          },
          "response": []
        },
        {
          "_postman_id": "396250a0-fe4b-4c8c-c21a-9c98cdf71c2e",
          "name": "Update Line item",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Id\": 11111,\r\n  \"CampaignId\": 00000, \r\n  \"PlacementId\": 22222,\r\n  \"Name\": \"RTB Activity Name\",\r\n  \"SchedulingType\": 1,\r\n  \"CappingSettings\": [\r\n    {\r\n      \"Id\": 2325686,\r\n      \"FrequencyCap\": 6,\r\n      \"InScreenDuration\": 6000\r\n    }],\r\n  \"Inventories\": [\r\n    {\r\n      \"Id\": 23331668,\r\n      \"InventorySourceId\": 31,\r\n      \"SourceType\": 1,\r\n      \"SourceName\": \"Rubicon\",\r\n      \"SourceId\": 31,\r\n      \"DealId\": null,\r\n      \"State\": 1,\r\n      \"CpmPrice\": null,\r\n      \"PriceMultiplier\": 1,\r\n      \"InventoryBuyingType\": 0\r\n  }],\r\n  \"SchedulerStartDate\": \"2016-05-04T23:00:00Z\",\r\n  \"SchedulerEndDate\": \"2016-12-31T00:00:00Z\",\r\n  \"PeriodStartDate\": \"2016-05-05T14:23:00Z\",\r\n  \"PeriodEndDate\": \"2016-05-04T23:00:00Z\",\r\n  \"FullPeriodStartDate\": \"2016-05-04T23:00:00Z\",\r\n  \"FullPeriodEndDate\": \"2016-12-31T00:00:00Z\",\r\n  \"BuyingType\": 2\r\n}"
            },
            "description": "This method updates an existing RTB Line Item.\n\nYou need to specify ActivityId,CampaignId and PlacementId in your request body.\n\nEXAMPLE: \"Id\": 11111, \"CampaignId\": 00000, \"PlacementId\": 2222222\n(Id stand for ActivityId).\n\nYou can retrieve CampaignId using \"GET Campaigns\" method."
          },
          "response": []
        },
        {
          "_postman_id": "def694ea-d590-2d2b-32a2-d3845e4e9c34",
          "name": "Delete/Deactivate Line item",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities?campaignId=00000&ActivityId=11111",
            "method": "DELETE",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method deletes a specified RTB Line Item.\n\nYou need to parse CampaignId and ActivityId on your request URL.\n\nEXAMPLE: /Activities?campaignId=00000&ActivityId=11111\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can retrieve ActivityId \"GET RTB Line Items\" method."
          },
          "response": []
        },
        {
          "_postman_id": "fc341db7-877f-76f6-10d4-3317736840b0",
          "name": "Inventory Sources",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities/InventorySources?campaignId=11111",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available inventory sources.\n\nYou need to parse CampaignId on your request URL.\n\nEXAMPLE: /Activities/InventorySources?campaignId=11111\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n"
          },
          "response": []
        },
        {
          "_postman_id": "1519e317-1f74-70fb-d58a-ac3aa8c6f557",
          "name": "DSP Forecasting",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/v1/buyer/rtb/lineitems/forecasting",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \n   \"LineItemType\": 1,\n   \"Id\":0,\n   \"AdvertiserId\":0000,\n   \"CampaignId\":11111,\n   \"DateFormat2\":\"MM/dd/yyyy\",\n   \"SchedulingType\":2,\n   \"SchedulerStartDate\":\"01/15/2017\",\n   \"SchedulerEndDate\":\"01/21/2017\",\n   \"Periods\":[  \n\n   ],\n   \"CappingSettings\":[  \n\n   ],\n   \"Budget\":10,\n   \"BudgetPacingType\":\"0\",\n   \"Inventories\":[  \n      {  \n         \"InventorySourceId\":1,\n         \"SourceId\":1,\n         \"SourceType\":1\n      },\n      {  \n         \"InventorySourceId\":3,\n         \"SourceId\":3,\n         \"SourceType\":1\n      },\n      {  \n         \"InventorySourceId\":6,\n         \"SourceId\":6,\n         \"SourceType\":1\n      },\n      {  \n         \"InventorySourceId\":7,\n         \"SourceId\":7,\n         \"SourceType\":1\n      }\n   ],\n   \"CategoryType\":10,\n   \"IABCategories\":[1,2 \n\n   ],\n   \"IABCategoriesFilteringMethod\":1,\n   \"Targeting\":{  \n      \"Groups\":[  \n        \n      ],\n      \"SetupId\":279205,\n      \"EstimatedReach\":88622900\n   },\n   \"TimeZone\":\"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\"\n}"
            },
            "description": "This method is for cookie upload. Cookies are read from the request body.\n\nIMPORTANT: Request body should be sent as plain text, cookies separated by new line."
          },
          "response": []
        },
        {
          "_postman_id": "27d31048-03ab-417a-6f55-500f2d165136",
          "name": "Deals and Packages",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/Services/RTBActivity/v20141111/Activities/DealsAndPackages?campaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available deals and packages.\n\nYou need to parse CampaignId on your request URL.\nOptional parameters: inventorySourceId, startIndex, count\n\nEXAMPLE: /Activities/DealsAndPackages?campaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can retrieve InventorySourceId using \"GET Inventory Sources\" method."
          },
          "response": []
        },
        {
          "_postman_id": "271e6f48-9b32-ddd4-b7f6-5f4f4d511498",
          "name": "Upload Cookies",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/upload/cookies",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "-8654654654654654654\r\n8798798798798798798\r\n44457"
            },
            "description": "This method is for cookie upload. Cookies are read from the request body.\n\nIMPORTANT: Request body should be sent as plain text, cookies separated by new line."
          },
          "response": []
        },
        {
          "_postman_id": "74b39f2c-ff09-e31f-979a-02a565e2a425",
          "name": "Upload Advertising Ids",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/upload/advertisingids",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "5024D65F-EBBD-11FF-23AB-823FC255913A"
            },
            "description": "This method is for advertising Ids upload. Advertising Ids are read from the request body.\n\n\nIMPORTANT: Request body should be sent as plain text, advertising Ids (GUIDs) separated by new line."
          },
          "response": []
        },
        {
          "_postman_id": "d4a24e99-c5bd-9fa5-3262-0c51a1278927",
          "name": "Upload IP Ranges",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/upload/ipranges",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "2.125.125.3,8.144.144.9"
            },
            "description": "This method is for IP ranges upload. IP ranges are read from the request body.\n\nIMPORTANT: Request body should be sent as plain text, IP ranges separated by new line."
          },
          "response": []
        },
        {
          "_postman_id": "0a14f8d9-f2ac-c10c-5a35-d87a99a98a80",
          "name": "Trading Desk Fee Change Log",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/tradingdeskfeechangelog",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns Trading Desk Fee Change Log."
          },
          "response": []
        },
        {
          "_postman_id": "0b7ed60f-c291-cdfa-9109-65bf2180e381",
          "name": "Upload Cookies copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/upload/cookies",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "-8654654654654654654\r\n8798798798798798798\r\n44457"
            },
            "description": "This method is for cookie upload. Cookies are read from the request body.\n\nIMPORTANT: Request body should be sent as plain text, cookies separated by new line."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5aad011e-f166-e70d-9d05-7bdc5ce7522a",
      "name": "RTB Dictionaries",
      "description": "",
      "item": [
        {
          "_postman_id": "23f7be57-3641-14ec-ce65-f7a33da6b898",
          "name": "Locations",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/locations",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of locations for targeting.\n\nYou can use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/locations?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "35710c93-59bb-ed35-63f2-78f97de2627c",
          "name": "Languages",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/languages",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of languages for targeting.\n\nYou can use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/languages?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "3c22da36-35f5-4294-3abb-ce6c22064d76",
          "name": "Tracking Points",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/trackingPoints?campaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available tracking points for targeting.\n\nYou need to parse CampaignId on your request URL.\n\nEXAMPLE: /dictionaries/trackingPoints?campaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/trackingPoints?campaignId=00000&limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "3da53411-2e08-bb25-2914-5531dd3fa063",
          "name": "Audiences",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/audiences?campaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available audiences for targeting.\n\nYou need to parse CampaignId on your request URL.\n\nEXAMPLE: /dictionaries/audiences?campaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/audiences?campaignId=00000&limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "dcf0c5c1-736f-ce9c-09e3-ce9a89ef642c",
          "name": "Campaigns",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/campaigns?campaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available campaigns for targeting.\n\nYou need to parse CampaignId on your request URL.\n\nEXAMPLE: /dictionaries/campaigns?campaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/campaigns?campaignId=00000&limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "728b4f96-59b3-9f4a-3a26-f16fe5f01664",
          "name": "Device Types",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/deviceTargeting/deviceTypes",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available devices types and operating systems.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. filter (search term. Filters the result list to return service providers where name matches term)\n2. limit (limits the result amount, default is 100, to get all results use 0)\n\nExample: /v1/dictionaries/deviceTargeting/deviceTypes?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "efee7cd3-c10f-33ce-2884-f1aa66729092",
          "name": "Device Vendors",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/deviceTargeting/deviceVendors",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available devices types and operating systems.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. filter (search term. Filters the result list to return service providers where name matches term)\n2. limit (limits the result amount, default is 100, to get all results use 0)\n\nExample: /v1/dictionaries/deviceTargeting/deviceVendors?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "3e7322a5-98ca-105d-e95e-92177ba46508",
          "name": "Device Models",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/deviceTargeting/deviceModels",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available devices types and operating systems.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. filter (search term. Filters the result list to return service providers where name matches term)\n2. limit (limits the result amount, default is 100, to get all results use 0)\n\nExample: /v1/dictionaries/deviceTargeting/deviceModels?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "f7c34f56-c92f-91b9-b5ce-035941c1a261",
          "name": "Device Browsers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/deviceTargeting/browsers",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available devices types and operating systems.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. filter (search term. Filters the result list to return service providers where name matches term)\n2. limit (limits the result amount, default is 100, to get all results use 0)\n\nExample: /v1/dictionaries/deviceTargeting/browsers?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "ffd5ba86-3d49-4745-35ab-fee74b9d2ba5",
          "name": "Device Platforms",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/deviceTargeting/platforms",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available devices types and operating systems.\n\nYou can also use filtering parameters (which are optional) with such key names:\n\n1. filter (search term. Filters the result list to return service providers where name matches term)\n2. limit (limits the result amount, default is 100, to get all results use 0)\n\nExample: /v1/dictionaries/deviceTargeting/platforms?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "64323aea-c05b-a2d4-8916-a326e2c0672a",
          "name": "Engagements",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/engagements",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available engagements for targeting."
          },
          "response": []
        },
        {
          "_postman_id": "7cd5d31a-d997-4a3f-40e0-766f244c0a33",
          "name": "External Data Providers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/externalDataProviders?campaignId=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available external data providers for targeting.\n\nYou need to parse CampaignId on your request URL.\n\nEXAMPLE: /dictionaries/externalDataProviders?campaignId=00000\n\nYou can retrieve CampaignId using \"GET Campaigns\" method."
          },
          "response": []
        },
        {
          "_postman_id": "abc18b59-99d0-10d9-4898-70faaedf3882",
          "name": "External Data Provider Categories",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/externalDataCategories?campaignId=00000&dataProviderId=11111",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available categories and segments for the specified external data provider.\n\nYou need to parse CampaignId and DataProviderId on your request URL.\n\nEXAMPLE: /dictionaries/externalDataCategories?campaignId=00000&dataProviderId=11111\n\nYou can retrieve CampaignId using \"GET Campaigns\" method.\n\nYou can retrieve ProviderId using \"GET External Data Providers\" method."
          },
          "response": []
        },
        {
          "_postman_id": "8a8ff52c-32f4-33d9-fcea-e623a3e31982",
          "name": "Internet Service Providers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/internetServiceProviders",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of internet service for targeting.\n\nYou can use filtering parameters (which are optional) with such key names:\n\n1. term\n2. filter (search term. Optional. Filters the result list to return service providers where name matches term)\n3. limit (limits the result amount, default is 100, to get all results use 0)\n4. startIndex (default value is 0. Optional. Defines start index, from which element to start)\n\nExample: /v1/dictionaries/internetServiceProviders?limit=0"
          },
          "response": []
        },
        {
          "_postman_id": "b4c72744-b3e9-57bf-bc60-0e9c5b976ade",
          "name": "Inventory Types",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/dictionaries/inventoryTypes",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of inventory source types."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "82bde5b3-b444-c2a0-fb07-d79b03ed670b",
      "name": "RTB Inventories",
      "description": "",
      "item": [
        {
          "_postman_id": "26db477b-b8b1-4929-5afa-7886a60f06b9",
          "name": "Creative Settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/creativesettings?sourceid=780&sourcetype=1&parentsourceid=780",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns detailed information about creative settings for specified inventory.\n\nYou need to parse source ID, source type and parent source ID on your request URL.\n\nExample: /v1/creativesettings?sourceid=780&sourcetype=1&parentsourceid=780"
          },
          "response": []
        },
        {
          "_postman_id": "720480fe-03ee-cbd1-1de2-0c36f44fdf25",
          "name": "Classificators list for specified type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/creativesettings/classificator/xxxx",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns classificators list for specified type.\n\nYou need to parse \"type\" parameter on your request URL.\n\nType can be bannertype, richmediasubtype, iabcategory and etc.\n\nExample: /v1/creativesettings/classificator/xxxx\n(where xxxx is type)"
          },
          "response": []
        },
        {
          "_postman_id": "14d33ac9-3f90-94c6-fcbd-e37cccc1d37d",
          "name": "Inventory Sources",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/deals/inventorySources",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available inventory sources..\n\nYou can filter inventory sources using these parameters:\n1. mustHaveDeals (default is true)\n2. mustSupportManualDeals (default is false)"
          },
          "response": []
        },
        {
          "_postman_id": "f846e419-f5e2-459c-a451-06100d759cf1",
          "name": "Deals",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/deals",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of valid deals that are accessible for agency."
          },
          "response": []
        },
        {
          "_postman_id": "132f6e56-8934-2bdf-516f-ddf07a7bc4fc",
          "name": "Create Deal",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/deals",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"DealId\": \"TestDeal\",\r\n  \"InventorySourceId\": 780,\r\n  \"Name\": \"string\",\r\n  \"CpmPrice\": 0,\r\n  \"DealState\": \"New\"\r\n}"
            },
            "description": "This method creates marketplace manual deal."
          },
          "response": []
        },
        {
          "_postman_id": "113e6eb8-2cc1-d7e5-5f31-8bce0a1aa8e5",
          "name": "Deal Info (for PMP, external and manual deals)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/deals/x/y/z",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This returns information about specified deal.\n\nYou need to parse parent source ID, source type and source ID on your request URL.\n\nExample: /dsp/v1/deals/x/y/z\n(where x - parent source ID, y - source type, z - source ID)\n\nAvailable source type values:\n3 - PMP deal\n5 - external deal\n6 - manual deal"
          },
          "response": []
        },
        {
          "_postman_id": "4782751a-0ff5-b54e-4546-7cace081e28a",
          "name": "Update Deal State ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/deals/x/y/z",
            "method": "PATCH",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"DealState\": 0\r\n}"
            },
            "description": "This method updates deal state for client division.\n\nYou need to parse parent source ID, source type and source ID on your request URL.\n\nExample: /dsp/v1/deals/x/y/z\n(where x - parent source ID, y - source type, z - source ID)\n\nSource type values:\n3 - PMP deal\n5 - external deal\n6 - manual deal\n\nDeal state values:\n2 - Accepted\n3 - Rejected"
          },
          "response": []
        },
        {
          "_postman_id": "5c3f38f2-f8d4-4e9d-80a4-6d16d01598c3",
          "name": "All Inventories (campaign or line item scope)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/inventoriesoverview/available?campaignid=000000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available inventories for a specified campaign or line item.\n\nPlease note that either CampaignId or ActivityId is required on your request URL.\n\nExample: /v1/inventoriesoverview/available?campaignid=000000"
          },
          "response": []
        },
        {
          "_postman_id": "1710b7e0-ddd0-217d-778f-1c6de7c520a9",
          "name": "Search inventories (campaign or line item scope)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/inventoriesoverview?campaignid=00000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available inventories for a specified campaign or line item and matches specified filter parameters.\n\nPlease note that either CampaignId or ActivityId is required on your request URL.\n\nExample: /v1/inventoriesoverview?campaignid=000000\n\nMore info about search parameters: \nhttp://api.adform.com/v1/help/buyer/inventories#!/InventoriesOverview/InventoriesOverview_GetList"
          },
          "response": []
        },
        {
          "_postman_id": "a5e0b7c6-f1b7-2331-cb72-98b934779bc2",
          "name": "Inventory details",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/inventoriesoverview/x/y/z?campaignId=000000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns detailed information about specified inventory.\n\nPlease note that parent source ID, source type, source ID and campaign or activity ID is required on your request URL.\n\nExample: /v1/inventoriesoverview/x/y/z?campaignId=0000\n(where x - parnt source ID, y - source type, z - source ID)"
          },
          "response": []
        },
        {
          "_postman_id": "c1e2c559-ace1-8fc5-e4a0-8f0e774c329d",
          "name": "Inventory Source Logo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/inventoriesoverview/logos/?id=1",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns logo for specified inventory sources. Content value is returned as Base64 string.\n\nYou need to parse inventory source ID on your request URL.\n\nExample: /dsp/v1/inventoriesoverview/logos/?id=1"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a7be5e2c-fe67-e273-69e0-3668087c2474",
      "name": "RTB Targeting",
      "description": "",
      "item": [
        {
          "_postman_id": "e2e977fb-cfdf-1af3-117b-5a91f69a5291",
          "name": "Default Targeting",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/activities/defaulttargeting",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns default targeting settings for a new line item."
          },
          "response": []
        },
        {
          "_postman_id": "f38e9953-ec3f-7fc4-c635-76f1c7766c8b",
          "name": "Line Item Targeting",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/activities/11111/targeting",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns RTB Line Item targeting settings.\n\nYou need to parse ActivityId on your request URL.\n\nEXAMPLE: /dsp/v1/activities/11111/targeting\n(11111 - ActivityId)"
          },
          "response": []
        },
        {
          "_postman_id": "d101de80-1edf-7f68-64a2-1566af2ddb42",
          "name": "Update Line Item Targeting",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "    \r",
                  "tests[\"Content-Type is application/json\"] =\r",
                  "  request.headers[\"Content-Type\"] === \"application/json\";\r",
                  "    \r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/activities/11111/targeting",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"SetupId\": 386954,\n  \"Groups\": [\n    {\n      \"GroupId\": \"d14ab530-6d07-4b80-b223-2156fa3ef1bd\",\n      \"Id\": 1,\n      \"Rules\": [\n        {\n          \"$type\": \"FromLocationTargetingRule\",\n          \"DimensionId\": 6,\n          \"Locations\": [\n            {\n              \"Id\": 124,\n              \"Name\": \"Canada - country\",\n              \"Type\": 2,\n              \"CountryCode\": \"CA\"\n            }\n          ]\n        },\n        {\n            \"$type\" : \"AudienceIsTargetingRule\",\n            \"TrackingPoints\" : [ 0]\n        }\n      ],\n      \"Settings\": {\n        \"PriceMultiplier\": 1\n      }\n    }\n  ]\n}"
            },
            "description": "This method updates RTB Line Item targeting settings.\n\nYou need to parse ActivityId on your request URL.\n\nEXAMPLE: /dsp/v1/activities/11111/targeting\n(11111 - ActivityId)"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "30d17201-17c1-febc-edec-13070f9d4544",
      "name": "RTB Templates",
      "description": "",
      "item": [
        {
          "_postman_id": "b2757414-7746-79a8-e3d7-8aa8a7562179",
          "name": "Domain Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/domains",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns list of domain templates that are accessible for agency."
          },
          "response": []
        },
        {
          "_postman_id": "5319e4e2-2fd4-9617-de5a-e10e0308168d",
          "name": "Domain Template by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/domains/0000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns specific domain template.\n\nYou need to provide domain template ID on your request URL.\n\nEXAMPLE: v1/templates/domains/0000\n(where 0000 - domain template ID)"
          },
          "response": []
        },
        {
          "_postman_id": "eafec1f7-00d9-80ed-eff5-04ea42d3356d",
          "name": "Create Domain Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 201"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/domains",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\" : \"Test\",\r\n  \"type\": 1,\r\n  \"content\" : { \r\n  \t\"Domains\" : [ \"test.com\", \"test2.com\" ]\r\n  }\r\n}"
            },
            "description": "This method creates a domain template."
          },
          "response": []
        },
        {
          "_postman_id": "11a5d225-ba07-6cfe-e654-9b8e593e6a90",
          "name": "Update Domain Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/domains",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\" : 0000,\r\n  \"name\" : \"Test\",\r\n  \"active\" : false,\r\n  \"content\" : { \r\n  \t\"Domains\" : [ \"test.com\", \"test2.com\" ]\r\n  }\r\n}"
            },
            "description": "This method updates a domain template."
          },
          "response": []
        },
        {
          "_postman_id": "af8c3c42-891d-c481-3514-c363cc920677",
          "name": "Excel Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/exceltemplates",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns list of excel templates that are accessible for agency."
          },
          "response": []
        },
        {
          "_postman_id": "71d87849-7b43-ebd8-7bb6-f736cf90b869",
          "name": "Excel Template by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/exceltemplates/0000",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns list of excel templates that are accessible for agency."
          },
          "response": []
        },
        {
          "_postman_id": "4f15a94b-d676-91d2-d8b7-ab3fbbdd2035",
          "name": "Excel Template Tables Definitions",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/exceltemplates/tables",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of available tables with supported fields."
          },
          "response": []
        },
        {
          "_postman_id": "925cec23-db8f-2ec0-caed-7d481dec4bba",
          "name": "Create Excel Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 201"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/exceltemplates",
            "method": "POST",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test\",\n  \"type\": 2,\n  \"content\": {\n    \"name\": \"Test\",\n    \"parts\": [\n      {\n        \"customName\": \"Fees\",\n        \"activeFields\": [\n          {\n            \"code\": \"feeName\",\n            \"customName\": \"Name\"\n          },\n          {\n            \"code\": \"feeType\",\n            \"customName\": \"Type\"\n          }\n        ],\n        \"table\": \"Fees\"\n      },\n      {\n        \"customName\": \"Line Items\",\n        \"activeFields\": [\n          {\n            \"code\": \"lName\",\n            \"customName\": \"Line Item Name\"\n          },\n          {\n            \"code\": \"mName\",\n            \"customName\": \"Media\"\n          },\n          {\n            \"code\": \"mediaSection\",\n            \"customName\": \"Media Section\"\n          }\n        ],\n        \"table\": \"Line Items\"\n      }\n    ]\n  }\n}"
            },
            "description": "This method creates an excel template."
          },
          "response": []
        },
        {
          "_postman_id": "7cbbf781-719f-6a10-b635-b4f4b9a2bef2",
          "name": "Update Excel Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/exceltemplates",
            "method": "PUT",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\" : 0000,\n  \"active\" : true,\n  \"name\": \"Test\",\n  \"type\": 2,\n  \"content\": {\n    \"name\": \"Test\",\n    \"parts\": [\n      {\n        \"customName\": \"Fees\",\n        \"activeFields\": [\n          {\n            \"code\": \"feeName\",\n            \"customName\": \"Name\"\n          },\n          {\n            \"code\": \"feeType\",\n            \"customName\": \"Type\"\n          }\n        ],\n        \"table\": \"Fees\"\n      },\n      {\n        \"customName\": \"Line Items\",\n        \"activeFields\": [\n          {\n            \"code\": \"lName\",\n            \"customName\": \"Line Item Name\"\n          },\n          {\n            \"code\": \"mName\",\n            \"customName\": \"Media\"\n          },\n          {\n            \"code\": \"mediaSection\",\n            \"customName\": \"Media Section\"\n          }\n        ],\n        \"table\": \"Line Items\"\n      }\n    ]\n  }\n}"
            },
            "description": "This method updates an excel template."
          },
          "response": []
        },
        {
          "_postman_id": "8f49b029-b0f4-6756-9bbf-509d0a66614a",
          "name": "Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates",
            "method": "GET",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": "This method returns a list of templates that are accessible for agency."
          },
          "response": []
        },
        {
          "_postman_id": "265bd964-5f32-598c-42ae-daab8cbca3e4",
          "name": "Activate/Deactivate Templates",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Request header includes authentication Ticket\"] = \r",
                  "  request.headers.Ticket;\r",
                  "\r",
                  "tests[\"Request was successful\"] = \r",
                  "  responseCode.code === 204;"
                ]
              }
            }
          ],
          "request": {
            "url": "https://api.adform.com/dsp/v1/templates/0000",
            "method": "PATCH",
            "header": [
              {
                "key": "Ticket",
                "value": "{{Ticket}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"active\": true\r\n}"
            },
            "description": "This method allows to activate or deactivate templates.\n\nYou need to parse template ID on your request URL.\n\nEXAMPLE: dsp/v1/templates/0000\n(where 0000 - template ID)"
          },
          "response": []
        }
      ]
    }
  ]
}